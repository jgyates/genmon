[GenMon]

# name of the site, used in the web interface and email output (required)
sitename = SiteName

# the serial device name of your serial port. Normally  /dev/serial0 or
# /dev/ttyAMA0 for onboard Raspberry Pi Serial ports (required)
port = /dev/serial0

# Set to true to enable Serial over TCP. A hardware serial to TCP converter is
# required and must be setup for 9600,N,8,1. The software will only make
# a TCP socket connection, it will not setup the port. The software expects
# the TCP connection to be a passthrough (i.e. not process modbus protocol).
# The project software will process the modbus protocol.
use_serial_tcp = False

# if use_serial_tcp is enabled, this parameter sets the IP address used.
serial_tcp_address =

# if use_serial_tcp is enabled, this parameter sets the IP port used.
serial_tcp_port = 8899

# If this option is set to true, weekly exercise time and remote start / stop
# commands will be handled by the transfer switch and not the generator
# controller. As a result these options will not be supported by the software.
smart_transfer_switch = False

# the name of the folder in the mailbox for searching for incoming email
# commands (required)
incoming_mail_folder = Generator

# once an email command has been processed by genmon.py the email is moved to
# this mailbox folder (required)
processed_mail_folder = Generator/Processed

# The TCP port used for communicating with the other apps like
# ClientInterface.py and the web interface (required)
server_port = 9082

# the Modbus slave address. This *should* not need to be changed from 9d
# (required)
address = 9d

# Optional. This floating point value represents the additional seconds to add
# to the modbus timeout value
additional_modbus_timeout = 0.0

# location of log files (required)
loglocation = /var/log/

# enable enable code to support reverse engineering of registers. This option,
# when True creates a thread that will monitor registers in the controller and
# send notifications of changed registers. Not used in normal operation
# (optional, default False)
enabledebug = False

# This option will display the contents of additional registers that appear to
# be associated with sensors of some type, for example one register outputs
# almost half of the frequency. I assume this is used internally by the
# controller. (optional, default False)
displayunknown = False

# (optional) This option enables (when True) using and alternate method for
# writing the exercise time. Some version of the Evolution firmware only
# support the legacy method of writing the exercise time. The legacy method
# is a bit more convoluted and the current implementation may result in the
# exercise time being off by one or two minutes from the request set value.
# (optional, default False).  Note this option is forced True if a Nexus
# controller is detected or selected. (e.g. use legacy exercise write if
# using a Nexus controller). When using this method the exercise time must
# be at least three minutes or more from the current generator time.
uselegacysetexercise = False

# (optional) Disable the monitoring of the utility line voltage for detecting
# power outages. This will disable the sending of emails and logging to the
# outage log when a power outage is detected by the software. For Evolution
# and Nexus Controllers this option is typically false, unless you have
# a "smart" transfer switch. With "smart" transfer switches, the transfer
# switch (not the generator controller) will monitor the utility voltage
# and signal the generator to start (by 2-wire control). Non-smart transfer
# switches relay on the generator controller to monitor the utility line.
# With non-smart transfer  switches the generator controller will monitor
# the utility line and if an outage is detected the generator controller
# will signal the transfer switch to disconnect the utility line. Once the
# switch is activated the generator controller will start the generator.
# With smart transfer switches it is common for the utility line to not be
# to the generator controller. In this case the software would not be able to
# detect and outage (our detect it incorrectly) since there was no utility
# line connected.
disableoutagecheck = False

# (optional) The software will auto-detect the cooling type. This option
# is not needed unless you want to override to auto-detect feature. The
# auto-detect can be overridden with this setting. True if monitoring a
# liquid cooled generator, False if air cooled.
#liquidcooled = True

# (optional). The software will auto-detect the controller type. This option
# is not needed unless you want to override to auto-detect feature. The
# auto-detect can be overridden with this setting. True for Evolution
# controller, False for Nexus Controller.
#evolutioncontroller = True

# (optional). If you controller has been replaced the serial number is not
# present in replacement controllers. This option allows you to override a
# missing serial number. This is a numeric value that must be ten digits.
# Pad leading zeros if you serial number is less than 10 digits. This
# value must be ten numeric digits (Evolution, Nexus only)
serialnumberifmissing =

# (optional). Nexus controllers do not have the ability to set the run hours.
# If your controller has been replaced you can use this parameter to add hours
# to the Run Hours reported by the controller. Note: The Evolution controller
# has this functionality built into the dealer menu. Note: if this option is
# used it will only modify the run hours displayed in the web interface.
# modifying this value will not affect the controllers internal maintenance
# counters. This value must be a numeric value.
additionalrunhours = 0.0

# (optional) - Use fuel level sensor for fuel gauge. This option if for
# Evolution Liquid Cooled Diesel Units only. If enabled this option will use
# the fuel level sensor for the web interface fuel gauge.
usesensorforfuelgauge = True

# (optional). This parameter will specify the full path of a file that will log
# power outages. An outage is defined by the utility voltage dropping below the
# generator's programmed threshold voltage. Typically the generator has a hold
# off period (usually around 5 seconds) before the generator starts. If utility
# power is rises above the threshold voltage before the hold off timer has
# expired the generator will  not start, but the outage will still be logged.
# If this parameter is not present the outage log will be in the same directory
# as genmon.py. To reset the outage log manually delete the outage.txt file.
# (e.g. "sudo rm /home/pi/genmon/outage.txt" )
# outagelog = /home/pi/genmon/outage.txt

# (optional) This parameter will sync the generator time to the system time
# if there is a change in Daylight Savings Time. This does not change the system
# time, only the generator time.
syncdst = False

# (optional) This parameter will sync the generator time to the system time
# once every hour. This does not change the system time, only the generator
# time.
synctime = False

# (optional) This parameter will enable the functionality to support biweekly
# and monthly exercise times (weekly is the default). Note, your generator
# controller  must support this functionality before enabling this option.
enhancedexercise = False

# (Optional) This parameter, if true will enable the use of HTTPS
# (secure HTTP) in the Flask web app or user name and password
# authentication, depending on the options below. This option is only
# applicable to the web app. This option requires python-openssl library
# to be installed
usehttps = False

# (Optional) This parameter is used with usehttps. If
# userhttps is true, then this option will signal the type of certificate
# to use. If this option is true  a self signed certificate (supplied by
# Flask library) will be used. If false, then the a key file (key.pem) and
# a certificate file (cert.pem) must be created and specified in the
# following entries (keyfile, certfile) below.
# For information on how to create your own
# certificate please see this site:
#     https://workaround.org/ispmail/jessie/create-certificate
useselfsignedcert = True

# (Optional) These parameters are used if useselfsignedcert is False. They
# specify the path and name of the key file and certificate file.
# example keyfile = /home/pi/genmon/cert.pem
#         certfile = /home/pi/genmon/cert.pem
keyfile =
certfile =

# (Optional) This parameter will allow a simple authentication to be used
# and it sets the username of the simple authentication. usehttps must
# be True to use this feature.
# This option is only applicable to the web app.
http_user =

# (Optional) This parameter will allow a simple authentication to be used
# and it sets the password of the simple authentication. usehttps must
# be True to use this feature.
# This option is only applicable to the web app.
http_pass =

# (Optional) This parameter will allow a simple authentication to be used
# and it sets the username of the simple authentication for a limited rights
# user. usehttps, https_user and https_pass must used before the limited user
# functionality is enabled.
# This option is only applicable to the web app.
http_user_ro =

# (Optional) This parameter will allow a simple authentication to be used
# and it sets the password of the simple authentication for a limited rights
# user. usehttps, https_user and https_pass must used before the limited user
# functionality is enabled.
# This option is only applicable to the web app.
http_pass_ro =

# (Optional) This parameter will allow the HTTP port to be set by the web
# interface. The default is 8000, but this setting will override that
# value. This option is only applicable to the web app.
http_port = 8000

# (optional) This parameter will override the default port for HTTPS, which is
# 443. Uncomment and change this value to use a non-standard port for HTTPS
https_port = 443

# (Optional) This parameter will allow the favicon on the http website to be
# set. Default is favicon.ico included with the project.
# examples   favicon=http://www.generac.com/favicon.ico
#            favicon=http://www.google.com/favicon.ico
favicon =

# A user defined URL link to include in status emails sent from the
# software when the generator status changes
user_url =

# Optional. kwlog. If kW Output is supported for your controller, a log of the
# power is kept by genmon. The default file is named kwlog.txt and resides
# in the same directory as genmon.py. To disable the log uncomment this entry
# and leave the entry blank. To change the path and filename, uncomment and
# provide a full path and filename.
# kwlog=

# Enable to disable the power meter / current readings
disablepowerlog = False

# The maximum size of the kwlog in megabytes. The default value is 15MB.
# Uncomment and modify this value to override the maximum log file size. An
# email notification will be sent when the log file is 80% of the maximum.
# All log entries will be removed once the log limit is reached.
kwlogmax = 15

# This is a value to override the divisor used to calculate the current for
# evolution units. This value is expressed in floating point.
# This parameter is optional. This value must be greater than zero.
currentdivider =

# This is a value to add or subtract from the value used to calculate current
# evolution units. This value is expressed in floating point.
# This value can be positive or negative. This parameter is typically only
# needed if your generator was not calibrated during the install of your
# generator.
currentoffset =

# Set this to True prevent the software from reporting platform
# specific data such as CPU temp.
disableplatformstats = False

# If True, email commands that write to the controller will be disabled
# (settime, setexercise, setremote, etc.). The default is False
readonlyemailcommands = False

# If True, the software will make slight optimizations for slower CPUs.
# This is a design trade off for responsiveness vs CPU utilization
optimizeforslowercpu = False

# Weather information relies on the pyowm (Python Open Weather Map) python
# library. If you installed the Generator Monitor Software before
# version 1.9.6 and are upgrading you must run this command:
# "sudo pip install pyowm" from the console before the weather features will
# be functional

# if true, weather functionality will be disabled
disableweather = True

# to enable weather reporting in the UI you must have a weather API key from
# www.openweathermap.org and weatherlocation must be filled in. An API key
# can be obtained here: https://openweathermap.org/appid
weatherkey =

# Weather location. This can be a City, State, Country i.e. (Atlanta,GA,USA
# or London,GB) or this can be a city code from this site:
#   http://openweathermap.org/help/city_list.txt
weatherlocation =

# Display metric units for weather information if True. Default is False
# This also enables other units to be displayed as metric.
metricweather = False

# If set to True, the minimum information regarding the weather will be
# displayed. If set to False the maximum information will be
# displayed. The default is True
minimumweatherinfo = True

# fuel tank size in gallons (default) or liters, if metric units are enabled.
# This is used to estimate the fuel remaining the tank. Zero do disable fuel
# estimate
tanksize = 0

# set to true to use nominallinevolts to set nominal line volts value in
# the UI gauge. Evo and Nexus only.
usenominallinevolts = False

# this value can override the nominal line volts value of 240V. This is so
# countries with 220 or 230 volts is the norm instead of 240.
# Evo and Nexus only.
nominallinevolts = 240

#### BEGIN H-100 / G-Panel Specific Settings  #######
# This section is ignored for Nexus / Evolution
# set this value to h_100 to enable H-100 mode or G-Panel mode. Blank or
# omitted the software will default to Evolution / Nexus mode. The software
# will auto detect H-100 vs G-Panel
controllertype =

# Voltage Configuration is only valid for H-100 Industrial Controllers. Valid
# settings are :  120/208
#                 120/240
#                 230/400
#                 240/415
#                 277/480
#                 347/600
# The first number represents the Line to Neutral Voltage, the second is the
# Line to Line Voltage. This parameter is ignored for Evolution and Nexus.
voltageconfiguration = 120/240

# Set to either 12 or 24 depending if your generator has 1 or 2 batteries
nominalbattery = 24

# Set to true if you use a HTS/MTS/STS transfer  switch to enable readiing
# additional data from the switch
hts_transfer_switch = False

#### END H-100 Specific Settings #######

# The following entries are written by genmon.py based on the generator
# settings, serial number and a one time lookup on the internet of the
# serial number. If you are not connected to the internet default
# settings will be used based values read from the generator. Some
# of these settings are editable via the web interface.
#    fueltype, model, nominalrpm, nominalkw, nominalFreq

# The following entries are written and maintained by genmon some of
# these are editable in via the web interface: version, autofeedback
